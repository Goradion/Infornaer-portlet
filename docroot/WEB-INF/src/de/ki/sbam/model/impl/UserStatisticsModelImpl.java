/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package de.ki.sbam.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import de.ki.sbam.model.UserStatistics;
import de.ki.sbam.model.UserStatisticsModel;
import de.ki.sbam.model.UserStatisticsSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the UserStatistics service. Represents a row in the &quot;sbam_UserStatistics&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link UserStatisticsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link UserStatisticsImpl}.
 * </p>
 *
 * @author Alexander Mueller, Simon Bastian
 * @see UserStatisticsImpl
 * @see UserStatistics
 * @see UserStatisticsModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class UserStatisticsModelImpl extends BaseModelImpl<UserStatistics>
	implements UserStatisticsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a user statistics model instance should use the {@link UserStatistics} interface instead.
	 */
	public static final String TABLE_NAME = "sbam_UserStatistics";
	public static final Object[][] TABLE_COLUMNS = {
			{ "userId", Types.BIGINT },
			{ "gamesWon", Types.BIGINT },
			{ "gamesLost", Types.BIGINT },
			{ "rightAnswers", Types.BIGINT },
			{ "wrongAnswers", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("gamesWon", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("gamesLost", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("rightAnswers", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("wrongAnswers", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table sbam_UserStatistics (userId LONG not null primary key,gamesWon LONG,gamesLost LONG,rightAnswers LONG,wrongAnswers LONG)";
	public static final String TABLE_SQL_DROP = "drop table sbam_UserStatistics";
	public static final String ORDER_BY_JPQL = " ORDER BY userStatistics.userId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY sbam_UserStatistics.userId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.de.ki.sbam.model.UserStatistics"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.de.ki.sbam.model.UserStatistics"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static UserStatistics toModel(UserStatisticsSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		UserStatistics model = new UserStatisticsImpl();

		model.setUserId(soapModel.getUserId());
		model.setGamesWon(soapModel.getGamesWon());
		model.setGamesLost(soapModel.getGamesLost());
		model.setRightAnswers(soapModel.getRightAnswers());
		model.setWrongAnswers(soapModel.getWrongAnswers());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<UserStatistics> toModels(UserStatisticsSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<UserStatistics> models = new ArrayList<UserStatistics>(soapModels.length);

		for (UserStatisticsSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.de.ki.sbam.model.UserStatistics"));

	public UserStatisticsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _userId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setUserId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _userId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return UserStatistics.class;
	}

	@Override
	public String getModelClassName() {
		return UserStatistics.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("userId", getUserId());
		attributes.put("gamesWon", getGamesWon());
		attributes.put("gamesLost", getGamesLost());
		attributes.put("rightAnswers", getRightAnswers());
		attributes.put("wrongAnswers", getWrongAnswers());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Long gamesWon = (Long)attributes.get("gamesWon");

		if (gamesWon != null) {
			setGamesWon(gamesWon);
		}

		Long gamesLost = (Long)attributes.get("gamesLost");

		if (gamesLost != null) {
			setGamesLost(gamesLost);
		}

		Long rightAnswers = (Long)attributes.get("rightAnswers");

		if (rightAnswers != null) {
			setRightAnswers(rightAnswers);
		}

		Long wrongAnswers = (Long)attributes.get("wrongAnswers");

		if (wrongAnswers != null) {
			setWrongAnswers(wrongAnswers);
		}
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return StringPool.BLANK;
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public long getGamesWon() {
		return _gamesWon;
	}

	@Override
	public void setGamesWon(long gamesWon) {
		_gamesWon = gamesWon;
	}

	@JSON
	@Override
	public long getGamesLost() {
		return _gamesLost;
	}

	@Override
	public void setGamesLost(long gamesLost) {
		_gamesLost = gamesLost;
	}

	@JSON
	@Override
	public long getRightAnswers() {
		return _rightAnswers;
	}

	@Override
	public void setRightAnswers(long rightAnswers) {
		_rightAnswers = rightAnswers;
	}

	@JSON
	@Override
	public long getWrongAnswers() {
		return _wrongAnswers;
	}

	@Override
	public void setWrongAnswers(long wrongAnswers) {
		_wrongAnswers = wrongAnswers;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			UserStatistics.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public UserStatistics toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (UserStatistics)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		UserStatisticsImpl userStatisticsImpl = new UserStatisticsImpl();

		userStatisticsImpl.setUserId(getUserId());
		userStatisticsImpl.setGamesWon(getGamesWon());
		userStatisticsImpl.setGamesLost(getGamesLost());
		userStatisticsImpl.setRightAnswers(getRightAnswers());
		userStatisticsImpl.setWrongAnswers(getWrongAnswers());

		userStatisticsImpl.resetOriginalValues();

		return userStatisticsImpl;
	}

	@Override
	public int compareTo(UserStatistics userStatistics) {
		long primaryKey = userStatistics.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof UserStatistics)) {
			return false;
		}

		UserStatistics userStatistics = (UserStatistics)obj;

		long primaryKey = userStatistics.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<UserStatistics> toCacheModel() {
		UserStatisticsCacheModel userStatisticsCacheModel = new UserStatisticsCacheModel();

		userStatisticsCacheModel.userId = getUserId();

		userStatisticsCacheModel.gamesWon = getGamesWon();

		userStatisticsCacheModel.gamesLost = getGamesLost();

		userStatisticsCacheModel.rightAnswers = getRightAnswers();

		userStatisticsCacheModel.wrongAnswers = getWrongAnswers();

		return userStatisticsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(11);

		sb.append("{userId=");
		sb.append(getUserId());
		sb.append(", gamesWon=");
		sb.append(getGamesWon());
		sb.append(", gamesLost=");
		sb.append(getGamesLost());
		sb.append(", rightAnswers=");
		sb.append(getRightAnswers());
		sb.append(", wrongAnswers=");
		sb.append(getWrongAnswers());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(19);

		sb.append("<model><model-name>");
		sb.append("de.ki.sbam.model.UserStatistics");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>gamesWon</column-name><column-value><![CDATA[");
		sb.append(getGamesWon());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>gamesLost</column-name><column-value><![CDATA[");
		sb.append(getGamesLost());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rightAnswers</column-name><column-value><![CDATA[");
		sb.append(getRightAnswers());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>wrongAnswers</column-name><column-value><![CDATA[");
		sb.append(getWrongAnswers());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = UserStatistics.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			UserStatistics.class
		};
	private long _userId;
	private long _gamesWon;
	private long _gamesLost;
	private long _rightAnswers;
	private long _wrongAnswers;
	private UserStatistics _escapedModel;
}