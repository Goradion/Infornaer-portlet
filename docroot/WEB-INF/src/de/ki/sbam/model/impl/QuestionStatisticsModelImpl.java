/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package de.ki.sbam.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import de.ki.sbam.model.QuestionStatistics;
import de.ki.sbam.model.QuestionStatisticsModel;
import de.ki.sbam.model.QuestionStatisticsSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the QuestionStatistics service. Represents a row in the &quot;sbam_QuestionStatistics&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link QuestionStatisticsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link QuestionStatisticsImpl}.
 * </p>
 *
 * @author Alexander Mueller, Simon Bastian
 * @see QuestionStatisticsImpl
 * @see QuestionStatistics
 * @see QuestionStatisticsModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class QuestionStatisticsModelImpl extends BaseModelImpl<QuestionStatistics>
	implements QuestionStatisticsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a question statistics model instance should use the {@link QuestionStatistics} interface instead.
	 */
	public static final String TABLE_NAME = "sbam_QuestionStatistics";
	public static final Object[][] TABLE_COLUMNS = {
			{ "questionId", Types.BIGINT },
			{ "answered_a", Types.BIGINT },
			{ "answered_b", Types.BIGINT },
			{ "answered_c", Types.BIGINT },
			{ "answered_d", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("questionId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("answered_a", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("answered_b", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("answered_c", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("answered_d", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table sbam_QuestionStatistics (questionId LONG not null primary key,answered_a LONG,answered_b LONG,answered_c LONG,answered_d LONG)";
	public static final String TABLE_SQL_DROP = "drop table sbam_QuestionStatistics";
	public static final String ORDER_BY_JPQL = " ORDER BY questionStatistics.questionId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY sbam_QuestionStatistics.questionId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.de.ki.sbam.model.QuestionStatistics"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.de.ki.sbam.model.QuestionStatistics"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static QuestionStatistics toModel(QuestionStatisticsSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		QuestionStatistics model = new QuestionStatisticsImpl();

		model.setQuestionId(soapModel.getQuestionId());
		model.setAnswered_a(soapModel.getAnswered_a());
		model.setAnswered_b(soapModel.getAnswered_b());
		model.setAnswered_c(soapModel.getAnswered_c());
		model.setAnswered_d(soapModel.getAnswered_d());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<QuestionStatistics> toModels(
		QuestionStatisticsSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<QuestionStatistics> models = new ArrayList<QuestionStatistics>(soapModels.length);

		for (QuestionStatisticsSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.de.ki.sbam.model.QuestionStatistics"));

	public QuestionStatisticsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _questionId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setQuestionId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _questionId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return QuestionStatistics.class;
	}

	@Override
	public String getModelClassName() {
		return QuestionStatistics.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("questionId", getQuestionId());
		attributes.put("answered_a", getAnswered_a());
		attributes.put("answered_b", getAnswered_b());
		attributes.put("answered_c", getAnswered_c());
		attributes.put("answered_d", getAnswered_d());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long questionId = (Long)attributes.get("questionId");

		if (questionId != null) {
			setQuestionId(questionId);
		}

		Long answered_a = (Long)attributes.get("answered_a");

		if (answered_a != null) {
			setAnswered_a(answered_a);
		}

		Long answered_b = (Long)attributes.get("answered_b");

		if (answered_b != null) {
			setAnswered_b(answered_b);
		}

		Long answered_c = (Long)attributes.get("answered_c");

		if (answered_c != null) {
			setAnswered_c(answered_c);
		}

		Long answered_d = (Long)attributes.get("answered_d");

		if (answered_d != null) {
			setAnswered_d(answered_d);
		}
	}

	@JSON
	@Override
	public long getQuestionId() {
		return _questionId;
	}

	@Override
	public void setQuestionId(long questionId) {
		_questionId = questionId;
	}

	@JSON
	@Override
	public long getAnswered_a() {
		return _answered_a;
	}

	@Override
	public void setAnswered_a(long answered_a) {
		_answered_a = answered_a;
	}

	@JSON
	@Override
	public long getAnswered_b() {
		return _answered_b;
	}

	@Override
	public void setAnswered_b(long answered_b) {
		_answered_b = answered_b;
	}

	@JSON
	@Override
	public long getAnswered_c() {
		return _answered_c;
	}

	@Override
	public void setAnswered_c(long answered_c) {
		_answered_c = answered_c;
	}

	@JSON
	@Override
	public long getAnswered_d() {
		return _answered_d;
	}

	@Override
	public void setAnswered_d(long answered_d) {
		_answered_d = answered_d;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			QuestionStatistics.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public QuestionStatistics toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (QuestionStatistics)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		QuestionStatisticsImpl questionStatisticsImpl = new QuestionStatisticsImpl();

		questionStatisticsImpl.setQuestionId(getQuestionId());
		questionStatisticsImpl.setAnswered_a(getAnswered_a());
		questionStatisticsImpl.setAnswered_b(getAnswered_b());
		questionStatisticsImpl.setAnswered_c(getAnswered_c());
		questionStatisticsImpl.setAnswered_d(getAnswered_d());

		questionStatisticsImpl.resetOriginalValues();

		return questionStatisticsImpl;
	}

	@Override
	public int compareTo(QuestionStatistics questionStatistics) {
		long primaryKey = questionStatistics.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof QuestionStatistics)) {
			return false;
		}

		QuestionStatistics questionStatistics = (QuestionStatistics)obj;

		long primaryKey = questionStatistics.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<QuestionStatistics> toCacheModel() {
		QuestionStatisticsCacheModel questionStatisticsCacheModel = new QuestionStatisticsCacheModel();

		questionStatisticsCacheModel.questionId = getQuestionId();

		questionStatisticsCacheModel.answered_a = getAnswered_a();

		questionStatisticsCacheModel.answered_b = getAnswered_b();

		questionStatisticsCacheModel.answered_c = getAnswered_c();

		questionStatisticsCacheModel.answered_d = getAnswered_d();

		return questionStatisticsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(11);

		sb.append("{questionId=");
		sb.append(getQuestionId());
		sb.append(", answered_a=");
		sb.append(getAnswered_a());
		sb.append(", answered_b=");
		sb.append(getAnswered_b());
		sb.append(", answered_c=");
		sb.append(getAnswered_c());
		sb.append(", answered_d=");
		sb.append(getAnswered_d());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(19);

		sb.append("<model><model-name>");
		sb.append("de.ki.sbam.model.QuestionStatistics");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>questionId</column-name><column-value><![CDATA[");
		sb.append(getQuestionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>answered_a</column-name><column-value><![CDATA[");
		sb.append(getAnswered_a());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>answered_b</column-name><column-value><![CDATA[");
		sb.append(getAnswered_b());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>answered_c</column-name><column-value><![CDATA[");
		sb.append(getAnswered_c());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>answered_d</column-name><column-value><![CDATA[");
		sb.append(getAnswered_d());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = QuestionStatistics.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			QuestionStatistics.class
		};
	private long _questionId;
	private long _answered_a;
	private long _answered_b;
	private long _answered_c;
	private long _answered_d;
	private QuestionStatistics _escapedModel;
}